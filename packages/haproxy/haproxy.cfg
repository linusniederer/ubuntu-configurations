# HAProxy - example configuration
#
# @author: https://github.com/linusniederer
# @link: https://github.com/linusniederer/ubuntu-configurations/blob/main/packages/haproxy/haproxy.cfg
# @raw: https://raw.githubusercontent.com/linusniederer/ubuntu-configurations/main/packages/haproxy/haproxy.cfg
#

global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA>
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

# http frontend example
frontend http_fronend
        bind *:80
        mode http
        use_backend tcp_8080_backend

# http redirect to https
frontend http_redirect
        bind *:80
        mode http
        http-request redirect scheme https unless { ssl_fc }
        
# https frontend example
frontend https_frontend
        bind *:443 ssl crt /etc/ssl/haproxy/haproxy.pem
        use_backend tcp_8080_backend
        
# domain filter example
frontend https_domain_filter
        bind *:443 ssl crt /etc/ssl/haproxy/haproxy.pem
        acl ACL_example hdr(host) -i example.com www.example.com
        use_backend tcp_8080_backend if ACL_example
        default_backend no-match

# ip address filter
frontend https_ip_filter
        bind *:443 ssl crt /etc/ssl/haproxy/haproxy.pem
        tcp-request inspect-delay 5s
        tcp-request content accept if { req_ssl_hello_type 1 }
        acl auth_ip src 127.0.0.1
        acl auth_ip src 127.0.0.2
        use_backend tcp_8080_backend if auth_ip

# TCP 8080 Backend
backend tcp_8080_backend
        balance roundrobin
        server example1.com 127.0.0.1:8080
        server example2.com 127.0.0.2:8080
        
# no match backend
backend no-match
        http-request deny deny_status 400
